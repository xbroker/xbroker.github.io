{"version":3,"sources":["engine/persist.js","modules/Home/HomeSchema.js","modules/App/AppSchema.js","modules/Connections/ConnectionsSchema.js","modules/Agents/AgentsSchema.js","modules/Commands/CommandsSchema.js","engine/index.js","modules/Home/HomePage.js","modules/Home/HomeContainer.js","modules/Connections/components/AddConnection.js","modules/Connections/ConnectionsPage.js","modules/Agents/AgentsPage.js","modules/Agents/AgentsContainer.js","modules/Connections/ConnectionsContainer.js","modules/Commands/CommandsPage.js","modules/Commands/CommandsContainer.js","modules/TimeMachine/TimeMachinePage.js","modules/TimeMachine/TimeMachineContainer.js","modules/TimeMachineControls/TimeMachineControls.js","modules/TimeMachineControls/TimeMachineControlsContainer.js","modules/App/components/Menu.js","modules/App/components/Icons.js","modules/App/AppPage.js","modules/App/AppContainer.js","serviceWorker.js","index.js"],"names":["lastAppId","lastState","newAppId","newState","schema","AppSchema","home","type","HomeSchema","connections","connectionId","persistent","initValue","connectionsCnt","sourceName","props","recipe","seq","Seq","cnt","count","openConnections","filter","v","get","agents","connectionAgents","connectionAgentsCnt","commands","connectionName","agentName","command","result","setInterval","liveState","engine","persistableState","serializedState","JSON","stringify","localStorage","setItem","err","console","log","createEngine","store","actionFactory","appId","AppName","reducer","repoReducer","createStore","persistedState","getItem","parsedState","parse","fromJS","loadState","dispatch","init","refresh","subscribe","state","saveState","getState","makeStore","action","head","HomePage","url","window","location","protocol","hostname","port","react_default","a","createElement","href","e","subEngine","HomeContainer","connect","repo","ownProps","Page","components_AddConnection","input","addConnection","onSubmit","preventDefault","value","trim","message","className","ref","node","index_es","icon","ConnectionsPage","id","this","removeConnection","color","title","_this","map","connection","name","key","renderStateIcon","onClick","bind","toIndexedSeq","_this$props","renderConnections","Component","AgentsPage","k","af","connectionsAgentsCnt","brokers","updateBrokers","forEach","conn","changeState","client","update","$set","submitAsync","agent","cmd","args","then","data","insert","catch","error","setMessage","createClient","ConnectionsContainer","set","action1","action2","batch","broker","close","remove","OnConnectionClose","CommandsPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","assertThisInitialized","handleSubmit","event","setState","target","submitCommand","selectConnection","options","c","label","getOptions","toArray","selectedOption","i","length","react_select_esm","onChange","getSelect","selectAgent","getAgentsOptions","getAgentsSelect","getIn","size","connectionsEngine","agentsEngine","CommandsContainer","option","split","shift","Error","TimeMachinePage","prevState","actionJs","toJS","stateJs","diffJs","diff","theme","main_default","src","collapsed","displayDataTypes","TimeMachineContainer","branch","currentBranchState","currentIndex","states","undefined","actions","printableState","TimeMachineControls","currentBranch","live","advanced","saveAs","nextProps","defineProperty","switchBranch","saveBranch","resetBranch","_this$props2","removeBranch","goForward","goBack","goLive","_this$props3","_this$props4","index","_this$props5","branches","maxIndex","toggleLive","toggleAdvanced","onChangeBranch","onGoBack","onGoForward","onSaveBranch","disabled","onReset","onRemove","rc_slider_es","min","max","step","onSliderChange","TimeMachineControlsContainer","keySeq","steps","Menu","selectedTabIndex","esm","selectedTabClassName","selectedIndex","onSelect","updateTabIndex","TimeMachineControls_TimeMachineControlsContainer","Home_HomeContainer","Connections_ConnectionsContainer","Commands_CommandsContainer","TimeMachine_TimeMachineContainer","library","add","faWifi","faHeart","farHeart","faHeartbeat","faExclamationTriangle","faThumbsUp","faHome","faTerminal","faChartLine","faTachometerAlt","faInfo","faMicrochip","faTrophy","faPlus","faSyncAlt","faToggleOn","faToggleOff","faTrashAlt","faSearchMinus","faSearchPlus","faArrowsAltH","faPlay","faStop","faEllipsisH","faRunning","faTh","faGripVertical","faGripHorizontal","faBug","AppPage","Menu_Menu","AppContainer","Boolean","match","ReactDOM","render","es","App_AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7599581.chunk.js","sourcesContent":["/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { fromJS } from 'immutable-sorted'\nimport { engine } from '.'\n\nexport const loadState = (appId) => {\n  try {\n    const serializedState = localStorage.getItem(appId);\n    if (serializedState === null) {\n      return undefined;\n    }\n    const parsedState = JSON.parse(serializedState);\n    return fromJS(parsedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nlet lastAppId;\nlet lastState;\nlet newAppId;\nlet newState;\n\nexport const saveState = (appId, state) => {\n    newAppId = appId;\n    newState = state;\n};\n\nconst persistState = () => {\n  try {\n    if(lastAppId === newAppId && lastState === newState) {\n      return;\n    }\n    const liveState = engine.liveState(newState);\n    const persistableState = engine.persistableState(liveState);\n    const serializedState = JSON.stringify(persistableState);\n    localStorage.setItem(newAppId, serializedState);\n    lastAppId = newAppId;\n    lastState = newState;\n  } catch (err) {\n    console.log(\"DUXEN ERROR: persistState: \", err);\n  }\n};\n\nsetInterval(persistState, 1000);\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Schema } from 'duxen'\n\nconst schema:Schema = {\n}\n\nexport default schema\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Schema } from 'duxen'\n\nimport HomeSchema from '../Home/HomeSchema'\nimport ConnectionsSchema from '../Connections/ConnectionsSchema'\nimport AgentsSchema from '../Agents/AgentsSchema'\nimport CommandsSchema from '../Commands/CommandsSchema'\n\nexport const AppName = \"xbroker-manager\";\nexport const AppVersion = \"0.0.25\";\n\nexport const AppSchema: Schema = {\n\n  home: {\n    type: 'schema',\n    schema: HomeSchema,\n  },\n\n  connections: {\n    type: 'schema',\n    schema: ConnectionsSchema,\n  },\n\n  agents: {\n    type: 'schema',\n    schema: AgentsSchema,\n  },\n\n  commands: {\n    type: 'schema',\n    schema: CommandsSchema,\n  },\n  \n}\n\nexport default AppSchema\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Schema } from 'duxen'\n\nimport { Seq } from 'immutable-sorted'\n\nconst schema:Schema = {\n\n  connectionId: {\n    type: 'value',\n    persistent: true,\n    initValue: 1,\n  },\n\n  connections: {\n    type: 'collection',\n    persistent: true,\n  },\n\n  'connectionsCnt': {\n    type:'view',\n    sourceName: 'connections',\n    props: [],\n    recipe: (seq, props)=>Seq({cnt: seq.count()})\n  },\n\n  'openConnections': {\n    type:'view',\n    sourceName: 'connections',\n    props: [],\n    recipe: (seq, props)=>seq.filter(v => (v.get('state') === 'open'))\n  },\n\n}\n\nexport default schema\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Schema } from 'duxen'\n\nimport { Seq } from 'immutable-sorted'\n\nconst schema:Schema = {\n\n  connectionAgents: {\n    type: 'collection',\n    persistent: false,\n  },\n\n  'connectionAgentsCnt': {\n    type: 'view',\n    sourceName: 'connectionAgents',\n    props: [],\n    recipe: (seq, props)=>Seq({cnt: seq.count()})\n  },\n\n}\n\nexport default schema\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Schema } from 'duxen'\n\nconst schema:Schema = {\n\n  connectionName: {\n    type: 'value',\n    persistent: true,\n    initValue: \"\",\n  },\n\n  agentName: {\n    type: 'value',\n    persistent: true,\n    initValue: \"\",\n  },\n\n  command: {\n    type: 'value',\n    initValue: \"\"\n  },\n\n  result: {\n    type: 'value',\n    initValue: {}\n  }\n}\n\nexport default schema\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { createStore } from 'redux'\nimport { createEngine } from 'duxen'\nimport schema from '../modules/App/AppSchema'\nimport { AppName, AppVersion } from '../modules/App/AppSchema'\nimport { loadState, saveState } from './persist'\n\nconst makeStore = (engine) => {\n  const appId = AppName + \":\" + AppVersion\n\n  const reducer = engine.repoReducer()\n  const store = createStore(reducer)\n\n  const persistedState = loadState(appId)\n\n  if(persistedState) {\n    store.dispatch(engine.actionFactory().init(persistedState))\n  }\n  store.dispatch(engine.actionFactory().refresh())\n\n  store.subscribe(() => saveState(appId, store.getState()))\n  // engine.subscribe((action) => console.log(\"ACTION\", Date(), action.type, JSON.stringify(action, undefined, 4)))\n  // store.subscribe(() => console.log(\"REDUX STATE\", Date(), JSON.stringify(engine.printableState(getState()).toJS(), undefined, 4)))\n\n  return store\n}\n\nexport const engine = createEngine(schema)\nexport const actionFactory = engine.actionFactory()\nexport const store = makeStore(engine)\nexport const dispatch = (action) => store.dispatch(action)\nexport const getState = () => engine.head(store.getState())\n","import React from 'react'\n\nimport './HomePage.css'\n\nconst HomePage = (props) => {\n    // eslint-disable-next-line no-undef\n    const url = window.location.protocol+\"//\"+window.location.hostname+\":\"+window.location.port+\"/\";\n\n    return <div>\n      <h2>Home</h2>\n      <h3><a href={url}>{url}</a></h3>\n    </div>\n}\n \nexport default HomePage\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport { connect } from 'react-redux'\n\nimport { engine } from '../../engine'\nimport Page from './HomePage'\n\nconst e = engine.subEngine('home')\n// const af = e.actionFactory();\n\nconst mapStateToProps = (state, ownProps) => ({})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.head(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({})\n\nconst HomeContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(Page)\n\nexport default HomeContainer\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React from 'react'\nimport { fromJS } from 'immutable-sorted'\nimport type { Connection } from 'redis-station';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './AddConnection.css'\n\ntype Props = {\n  addConnection: (connection: Connection) => void\n}\n\nexport default (props: Props) => {\n  const {addConnection} = props\n  let input: ?{value: string}\n\n  const onSubmit = e => {\n    e.preventDefault()\n    if (!input || !input.value.trim()) {\n      return\n    }\n    addConnection(fromJS({url: input.value, state: 'created', message: ''}))\n    input.value = ''\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n    <input className=\"AddConnection-input\" ref={node => {input = node}} />\n    <button className=\"AddConnection-input\" type=\"submit\">\n    <FontAwesomeIcon icon=\"plus\"/>\n    </button>\n    </form>\n  )\n}\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React, { Component } from 'react';\nimport { Map } from 'immutable-sorted'\n\nimport { AddConnection } from './components'\n\nimport type { Connection } from 'redis-station';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './ConnectionsPage.css'\n\ntype Props = {\n  connections: Map<number, Connection>,\n  connectionsCnt: Map<string, number>,\n  addConnection: (connection: Connection) => void,\n  removeConnection: (id: string) => void\n}\n\nexport default class ConnectionsPage extends Component<Props> {\n  removeConnection(id: string) {\n    this.props.removeConnection(id)\n  }\n\n  renderStateIcon(state: string) {\n    var icon\n    switch(state) {\n      case 'open': {\n        icon = <FontAwesomeIcon color=\"blue\" icon=\"wifi\" title=\"Open\"/>\n        break\n      }\n      default: {\n        icon = <FontAwesomeIcon color=\"red\" icon=\"exclamation-triangle\" title=\"Remove\"/>\n        break\n      }\n    }\n    return icon\n  }\n\n  renderConnections(connections: Map<string, Connection>) {\n    if(!connections) {\n      return null;\n    }\n\n    // const style = \"blueTable\"\n    const style = \"minimalistBlack\"\n    \n    return <div>\n      <table className={style}>\n        <thead>\n        <tr>\n          <th>Name</th>\n          <th>URL</th>\n          <th>Status</th>\n          <th>Delete</th>\n        </tr>\n        </thead>\n        <tbody>\n      {connections.map((connection: Connection, name: string) => {\n        const state: string = connection.get(\"state\")\n        return (<tr key={name}>\n          <td>{name}</td>\n          <td><b>{connection.get(\"url\")}<br/>{connection.get(\"message\")}</b></td>\n          <td className=\"center\"><button>{this.renderStateIcon(state)}</button></td>\n          <td className=\"center\"><button onClick={this.removeConnection.bind(this, name)}><FontAwesomeIcon icon=\"trash-alt\" title=\"Remove\"/></button></td>\n          </tr>)\n      }\n      ).toIndexedSeq()}\n        </tbody>\n      </table>\n      </div>;\n  }\n\n  render() {\n    const { connections, connectionsCnt, addConnection } = this.props;\n\n    return (\n      <div>\n        <header>\n          <h2>Connections ({connectionsCnt.get(\"cnt\")})</h2>\n        </header>\n        <AddConnection addConnection={addConnection} />\n        <br/>\n        <div>\n          {this.renderConnections(connections)}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react'\n\nimport './AgentsPage.css'\n\nconst renderAgents = (agents: Map<string, Connection>) => {\n  if(!agents) {\n    return null;\n  }\n\n  // const style = \"blueTable\"\n  const style = \"minimalistBlack\"\n  \n  return agents.map((connectionAgents, name) => (\n    <div key={name}>\n    <h3>{name} (<a href={connectionAgents.get('url')}>{connectionAgents.get('url')}</a>)</h3>\n    <table className={style}>\n      <thead>\n      <tr>\n        <th>Agent</th>\n        <th>Type</th>\n      </tr>\n      </thead>\n      <tbody>\n    {connectionAgents.get('result').map((v, k) => (\n      <tr key={k}>\n        <td><b>{k}</b></td>\n        <td>{v}</td>\n      </tr>)\n    ).toIndexedSeq()}\n      </tbody>\n    </table>\n    </div>)).toIndexedSeq()\n}\n\nconst AgentsPage = (props) => {\n    return <div>\n      <h2>Agents</h2>\n      {renderAgents(props.connectionAgents)}\n    </div>\n}\n \nexport default AgentsPage\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport { connect } from 'react-redux'\n\nimport { engine, dispatch } from '../../engine'\nimport Page from './AgentsPage'\n\nconst e = engine.subEngine('agents')\nconst af = e.actionFactory();\n\nconst mapStateToProps = (state, ownProps) => ({\n  connectionAgents: e.get(state, 'connectionAgents'),\n  connectionsAgentsCnt: e.get(state, 'connectionAgentsCnt'),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.head(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({})\n\nexport const OnConnectionOpen = (name, client) => {\n  client.submitAsync({agent: \"\", cmd: \"list\", args: [\"agents\"]})\n  .then(data => {\n    data.url = client.url\n    const action = af.insert('connectionAgents', name, data)\n    dispatch(action)\n  })\n  .catch(error => {\n    const action = af.insert('connectionAgents', name, error)\n    dispatch(action)\n  })\n}\n\nexport const OnConnectionClose = (name) => {\n  const action = af.remove('connectionAgents', name)\n  dispatch(action)\n}\n\nconst HomeContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(Page)\n\nexport default HomeContainer\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport { connect } from 'react-redux'\n\nimport { engine, getState, dispatch } from '../../engine'\nimport Page from './ConnectionsPage'\nimport { createClient } from 'xbroker-client'\nimport { OnConnectionOpen, OnConnectionClose } from '../Agents/AgentsContainer'\n\nconst e = engine.subEngine('connections')\nconst af = e.actionFactory();\n\nexport const brokers = {};\n\nconst updateBrokers = () => {\n  const conns = e.get(getState(), 'connections');\n  conns.forEach((conn) => {\n    const id = conn.get(\"id\");\n    if(!brokers[id]) {\n      const props = {\n        changeState: (state) => {\n          if(!brokers[id]) {\n            return;\n          }\n          const action = af.update('connections', id, {$set: {state}})\n          dispatch(action)\n          if(state === 'open') {\n            OnConnectionOpen(id, brokers[id])\n          }\n        },\n        setMessage: (message) => {\n          if(!brokers[id]) {\n            return;\n          }\n          const action = af.update('connections', id, {$set: {message}})\n          dispatch(action)\n        },\n      };\n      const url = conn.get(\"url\");\n      brokers[id] = createClient(url, props);\n    }\n  })\n};\n\nupdateBrokers();\n\nconst mapStateToProps = (state, ownProps) => ({\n  connections: e.get(state, 'connections'),\n  connectionsCnt: e.get(state, 'connectionsCnt'),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.head(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  addConnection: (connection) => {\n    const connectionId = e.get(getState(), 'connectionId')\n    const id = \"conn\"+connectionId;\n    connection = connection.set(\"id\", id);\n    const action1 = af.value('connectionId', (connectionId+1))\n    const action2 = af.insert('connections', id, connection)\n    const action = af.batch([action1, action2])\n    dispatch(action)\n    updateBrokers();\n  },\n  removeConnection: (id) => {\n    const broker = brokers[id]\n    if(broker) {\n      delete brokers[id]\n      broker.close()\n      OnConnectionClose(id)\n    }\n    const action = af.remove('connections', id)\n    dispatch(action)\n  },\n})\n\nconst ConnectionsContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(Page)\n\nexport default ConnectionsContainer\n","import React, { Component } from 'react'\nimport ReactSelect from \"react-select\"\n\nimport './CommandsPage.css'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst getOptions = (connections) => connections.map((c, name) => ({value: name, label: name+\" (\"+c.get('url')+\")\"})).toIndexedSeq()\n\nconst getSelect = (connectionName, connections, selectConnection) => {\n  const options = getOptions(connections).toArray()\n  var selectedOption = null\n\n  for(var i = 0; i < options.length; i++) {\n    if(options[i].value === connectionName) {\n      selectedOption = options[i]\n      break\n    }\n  }\n\n  return (<ReactSelect\n    name=\"Connections\"\n    className=\"Commands-select\"\n    value={selectedOption}\n    options={options}\n    onChange={selectConnection}\n  />)\n}\n\nconst getAgentsOptions = (agents) => agents.map((a, name) => ({value: name, label: name+\" (\"+a+\")\"})).toIndexedSeq()\n\nconst getAgentsSelect = (agents, agentName, selectAgent) => {\n  if(!agents) {\n    return null\n  }\n  const options = getAgentsOptions(agents).toArray()\n  var selectedOption = null\n\n  for(var i = 0; i < options.length; i++) {\n    if(options[i].value === agentName) {\n      selectedOption = options[i]\n      break\n    }\n  }\n\n  return (<ReactSelect\n    name=\"Agents\"\n    className=\"Commands-select\"\n    value={selectedOption}\n    options={options}\n    onChange={selectAgent}\n  />)\n}\n\nclass CommandsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {command: \"\"};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({command: event.target.value})\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    this.props.submitCommand(this.state.command)\n  }\n\n  render() {\n    const props = this.props\n\n    return <div>\n      <h2>Commands</h2>\n      <label>\n        Connection: \n      </label>\n      {getSelect(props.state.get('connectionName'), props.connections, props.selectConnection)}\n      <label>\n        Agent: \n      </label>\n      {getAgentsSelect(props.agents.getIn([props.state.get('connectionName'), 'result']), props.state.get('agentName'), props.selectAgent)}\n      <br/>\n      <label>\n        Command: \n      </label>\n      <form onSubmit={this.handleSubmit}>\n      <input className=\"Commands-input\" type=\"text\" size=\"25\" value={this.state.command} onChange={this.handleChange}/>\n      <button className=\"Commands-input\" type=\"submit\"><FontAwesomeIcon icon=\"running\"/></button>\n      </form>\n      <br/>\n      <label>\n        Sent: \n      </label>\n      <div>\n      {JSON.stringify(props.state.get('command'))}\n      </div>\n      <label>\n        Received: \n      </label>\n      <div>\n      {JSON.stringify(props.state.get('result'))}\n      </div>\n\n    </div>\n  }\n}\n \nexport default CommandsPage\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { connect } from 'react-redux'\nimport { engine, getState } from '../../engine'\nimport CommandsPage from './CommandsPage'\nimport { brokers } from '../Connections/ConnectionsContainer'\n\nconst connectionsEngine = engine.subEngine('connections')\nconst agentsEngine = engine.subEngine('agents')\nconst e = engine.subEngine('commands')\nconst af = e.actionFactory()\n\nconst mapStateToProps = (state, ownProps) => ({\n  state: e.get(state),\n  agents: agentsEngine.get(state, 'connectionAgents'),\n  connections: connectionsEngine.get(state, 'openConnections'),\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.head(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  selectConnection: (option) => dispatch(af.batch([af.value('connectionName', option.value), af.value('agentName', \"\")])),\n  selectAgent: (option) => dispatch(af.value('agentName', option.value)),\n  submitCommand: (command) => {\n    const args = command.trim().split(/\\s+/)\n    const cmd = args.shift()\n    const state = getState()\n    const connectionName = e.get(state, \"connectionName\")\n    const agentName = e.get(state, \"agentName\")\n    try {\n      const client = brokers[connectionName]\n      if(!client) {\n        throw new Error(\"Client Connection Does Not Exist: \"+connectionName)\n      }\n      client.submitAsync({agent: agentName, cmd, args})\n      .then(data => {\n        dispatch(af.batch([\n          af.value('command', command), \n          af.value('result', data)]))\n        })\n      .catch(error => {\n        dispatch(af.batch([\n          af.value('command', command), \n          af.value('result', e.message)]))\n        })    \n    } catch(e) {\n      dispatch(af.batch([\n        af.value('command', command), \n        af.value('result', e.message)]))\n    }\n  },\n})\n\nconst CommandsContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(CommandsPage)\n\nexport default CommandsContainer\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { fromJS } from 'immutable-sorted';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactJson from 'react-json-view';\nimport diff from 'immutablediff';\n\nimport './TimeMachinePage.css'\n\n// App component - represents the whole app\nexport default class TimeMachinePage extends Component {\n  render() {\n    const { state, prevState, action } = this.props;\n\n    const actionJs = fromJS(action).toJS();\n    const stateJs = state.toJS();\n    const diffJs = diff(prevState, state).toJS();\n    const theme = \"rjv-default\";\n\n    return (\n      <div>\n        <header>\n          <h2>State Inspector</h2>\n        </header>\n        <div className=\"TimeMachinePage-body\">\n        <ReactJson src={actionJs} theme={theme} name=\"Action\" collapsed={1} />\n        <ReactJson src={stateJs} theme={theme} name=\"State\" collapsed={2}\n          displayDataTypes={false} />\n        <ReactJson src={diffJs} theme={theme} name=\"Diff\" collapsed={2}\n          displayDataTypes={false} />\n        </div>\n      </div>\n    );\n  }\n}\n\nTimeMachinePage.propTypes = {\n  state: PropTypes.object,\n  prevState: PropTypes.object,\n  action: PropTypes.object,\n}\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { connect } from 'react-redux'\nimport { engine } from '../../engine'\nimport TimeMachinePage from './TimeMachinePage'\n\nconst e = engine\n\nconst mapStateToProps = (repo, ownProps) => {\n  const branch = engine.currentBranchState(repo);\n  const currentIndex = branch.get(\"currentIndex\");\n  const states = branch.get(\"states\");\n  const state = currentIndex < 0 ? undefined : states.get(currentIndex);\n  const actions = branch.get(\"actions\");\n  const action = currentIndex < 0 ? undefined : actions.get(currentIndex);\n  const prevState = currentIndex <= 0 ? undefined : states.get(currentIndex - 1);\n  return {\n    prevState: e.printableState(prevState),\n    state: e.printableState(state),\n    action,\n  };\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n})\n\nconst TimeMachineContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeMachinePage)\n\nexport default TimeMachineContainer\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './TimeMachineControls.css'\n\nexport default class TimeMachineControls extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentBranch: props.currentBranch,\n      live: props.live,\n      advanced: false,\n      saveAs: \"\",\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      currentBranch: nextProps.currentBranch,\n      live: nextProps.live,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n  }\n\n  onChange(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  onChangeBranch(e) {\n    const { switchBranch } = this.props\n    const currentBranch = e.target.value\n    this.setState({currentBranch: currentBranch})\n    switchBranch(currentBranch)\n  }\n\n  onSaveBranch(e) {\n    const { saveBranch } = this.props\n    if(this.state.saveAs) {\n      saveBranch(this.state.saveAs)\n    }\n    this.setState({\"saveAs\": \"\"})\n  }\n\n  onReset(e) {\n    const { currentBranch, resetBranch } = this.props\n    resetBranch(currentBranch)\n  }\n\n  onRemove(e) {\n    const { currentBranch, removeBranch } = this.props\n    removeBranch(currentBranch)\n  }\n\n  onGoFastForward(e) {\n    const { goForward } = this.props\n    goForward(10)\n  }\n\n  onGoForward(e) {\n    const { goForward } = this.props\n    goForward(1)\n  }\n\n  onGoBack(e) {\n    const { goBack } = this.props\n    goBack(1)\n  }\n\n  onGoFastBack(e) {\n    const { goBack } = this.props\n    goBack(10)\n  }\n\n  onGoLive(e) {\n    const { goLive } = this.props\n    this.setState({live: false})\n    goLive()\n  }\n\n  toggleLive(e) {\n    const { goBack, goLive } = this.props\n    const live = !this.state.live\n    this.setState({live: live})\n    if(live) {\n      goLive()\n    } else {\n      goBack(0)\n    }\n  }\n\n  toggleAdvanced(e) {\n    const advanced = !this.state.advanced\n    this.setState({advanced: advanced})\n  }\n\n  onSliderChange(value) {\n    const { goForward, goBack, currentIndex } = this.props\n    const index = value - 1;\n    if(index > currentIndex) {\n      goForward(index-currentIndex);\n    } else if(index < currentIndex) {\n      goBack(currentIndex-index);\n    }\n  }\n\n  render() {\n    const { branches, currentIndex, maxIndex } = this.props\n    let input\n\n    return (\n      <div>\n      <form onSubmit={this.onSubmit.bind(this)}>\n      {this.state.live \n        ? <FontAwesomeIcon icon=\"play\" title=\"Time Machine On\" onClick={this.toggleLive.bind(this)}/> \n        : <FontAwesomeIcon icon=\"stop\" title=\"Time Machine Off\" onClick={this.toggleLive.bind(this)}/>}\n      &nbsp;\n      <span>\n        <button onClick={this.toggleAdvanced.bind(this)}>\n          {this.state.advanced ? <b>&#x2630;</b> : <span>&#x2630;</span>}\n        </button>\n        &nbsp;\n        {this.state.advanced ?\n        <select\n          name=\"currentBranch\"\n          value={this.state.currentBranch}\n          onChange={this.onChangeBranch.bind(this)}>\n            {branches.map((branch, id) =>\n              (<option key={id} value={branch}>{branch}</option>)\n            ).toIndexedSeq()}\n        </select> : null }\n        <button onClick={this.onGoBack.bind(this)}>\n          &lt;\n        </button>\n        &nbsp;{currentIndex+1} / {maxIndex+1}&nbsp;\n        <button onClick={this.onGoForward.bind(this)}>\n          &gt;\n        </button>\n        {this.state.advanced ?\n        <span>\n        <input\n          name=\"saveAs\"\n          size=\"8\"\n          value={this.state.saveAs}\n          onChange={this.onChange.bind(this)}/>\n        <button onClick={this.onSaveBranch.bind(this)}\n          disabled={!this.state.saveAs}>\n          Save\n        </button>\n        <button onClick={this.onReset.bind(this)}>\n          Reset\n        </button>\n        <button onClick={this.onRemove.bind(this)}>\n          Remove\n        </button>\n        </span> : null}\n      </span>\n      </form>\n      {this.state.live ? null : <div className=\"TimeMachineControls-slider\"><Slider\n        min={1}\n        max={maxIndex+1}\n        value={currentIndex+1}\n        step={1}\n        onChange={this.onSliderChange.bind(this)}\n      /></div>}\n      </div>\n    )\n  }\n}\n\nTimeMachineControls.propTypes = {\n  currentBranch: PropTypes.string.isRequired,\n  currentIndex: PropTypes.number.isRequired,\n  maxIndex: PropTypes.number.isRequired,\n  live: PropTypes.bool.isRequired,\n  branches: PropTypes.object.isRequired,\n  goBack: PropTypes.func.isRequired,\n  goForward: PropTypes.func.isRequired,\n  goLive: PropTypes.func.isRequired,\n  switchBranch: PropTypes.func.isRequired,\n  saveBranch: PropTypes.func.isRequired,\n  resetBranch: PropTypes.func.isRequired,\n  removeBranch: PropTypes.func.isRequired,\n}\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { connect } from 'react-redux'\nimport { engine } from '../../engine'\nimport TimeMachineControls from './TimeMachineControls'\n\nconst e = engine\nconst af = e.actionFactory()\n\nconst mapStateToProps = (repo, ownProps) => {\n  const currentBranch = repo.get(\"currentBranch\")\n  const branches = repo.get(\"branches\")\n  const branch = branches.get(currentBranch);\n  const live = branch.get(\"live\")\n  const currentIndex = branch.get(\"currentIndex\")\n  const states = branch.get(\"states\")\n  const maxIndex = states.size-1\n  return {\n    branches: branches.keySeq(),\n    currentBranch,\n    currentIndex,\n    maxIndex,\n    live\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  goForward: (steps) => {\n    const action = af.goForward(steps)\n    dispatch(action)\n  },\n  goBack: (steps) => {\n    const action = af.goBack(steps)\n    dispatch(action)\n  },\n  goLive: () => {\n    const action = af.goLive()\n    dispatch(action)\n  },\n  switchBranch: (name) => {\n    const action = af.switchBranch(name)\n    dispatch(action)\n  },\n  saveBranch: (name) => {\n    const action = af.saveBranch(name)\n    dispatch(action)\n  },\n  resetBranch: (name) => {\n    const action = af.resetBranch(name)\n    dispatch(action)\n  },\n  removeBranch: (name) => {\n    if(name === \"master\") {\n      return\n    }\n    const action1 = af.switchBranch(\"master\")\n    dispatch(action1)\n    const action2 = af.removeBranch(name)\n    dispatch(action2)\n  }\n})\n\nconst TimeMachineControlsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeMachineControls)\n\nexport default TimeMachineControlsContainer\n","import React, {Component} from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs'\n\nimport HomeContainer from '../../Home/HomeContainer'\nimport ConnectionsContainer from '../../Connections/ConnectionsContainer';\nimport CommandsContainer from '../../Commands/CommandsContainer';\n\nimport TimeMachineContainer from '../../TimeMachine/TimeMachineContainer'\nimport TimeMachineControlsContainer from '../../TimeMachineControls/TimeMachineControlsContainer';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport 'react-tabs/style/react-tabs.css'\n\nimport './Menu.css'\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTabIndex: 0,\n    }\n  }\n\n  updateTabIndex(index) {\n    this.setState({selectedTabIndex: index})\n  }\n\n  render() {\n  return <Tabs \n    selectedTabClassName=\"react-tabs__tab--selected Menu-selected\"\n    selectedIndex={this.state.selectedTabIndex}\n    onSelect={this.updateTabIndex.bind(this)}\n    >\n    <TabList className=\"Menu\">\n    <Tab><FontAwesomeIcon icon=\"home\" title=\"Home\"/></Tab>\n    <Tab><FontAwesomeIcon icon=\"terminal\" title=\"Commands\"/></Tab>\n    <Tab><FontAwesomeIcon icon=\"bug\" title=\"Debug\"/></Tab>\n    </TabList>\n    <hr/>\n    {!this.props.live?<div>\n    <br/>\n    <TimeMachineControlsContainer/>\n    </div>:null}\n    <TabPanel>\n      <HomeContainer/>\n      <ConnectionsContainer/>\n    </TabPanel>\n    <TabPanel>\n    <CommandsContainer/>\n    </TabPanel>\n    <TabPanel>\n      {this.props.live?<div>\n      <br/>\n      <TimeMachineControlsContainer/>\n      </div>:null}\n      <TimeMachineContainer/>\n    </TabPanel>\n  </Tabs>\n  }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faWifi } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\nimport { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { faTerminal } from '@fortawesome/free-solid-svg-icons'\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\nimport { faMicrochip } from '@fortawesome/free-solid-svg-icons'\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\n\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOn } from '@fortawesome/free-solid-svg-icons'\nimport { faToggleOff } from '@fortawesome/free-solid-svg-icons'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons'\nimport { faSearchPlus } from '@fortawesome/free-solid-svg-icons'\nimport { faArrowsAltH } from '@fortawesome/free-solid-svg-icons'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faStop } from '@fortawesome/free-solid-svg-icons'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport { faRunning } from '@fortawesome/free-solid-svg-icons'\nimport { faTh } from '@fortawesome/free-solid-svg-icons'\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\nimport { faGripHorizontal } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faWifi)\nlibrary.add(faHeart)\nlibrary.add(farHeart)\nlibrary.add(faHeartbeat)\nlibrary.add(faExclamationTriangle)\nlibrary.add(faThumbsUp)\nlibrary.add(faHome)\nlibrary.add(faTerminal)\nlibrary.add(faChartLine)\nlibrary.add(faTachometerAlt)\nlibrary.add(faInfo)\nlibrary.add(faMicrochip)\nlibrary.add(faTrophy)\nlibrary.add(faPlus)\n\nlibrary.add(faSyncAlt)\nlibrary.add(faToggleOn)\nlibrary.add(faToggleOff)\nlibrary.add(faTrashAlt)\nlibrary.add(faSearchMinus)\nlibrary.add(faSearchPlus)\nlibrary.add(faArrowsAltH)\nlibrary.add(faPlay)\nlibrary.add(faStop)\nlibrary.add(faEllipsisH)\nlibrary.add(faRunning)\nlibrary.add(faTh)\nlibrary.add(faGripVertical)\nlibrary.add(faGripHorizontal)\nlibrary.add(faBug)\n","/**\n *  Copyright (c) 2018, AMI System, LLC\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport React, { Component } from 'react'\nimport './AppPage.css'\nimport Menu from './components/Menu'\nimport './components/Icons'\n\nclass AppPage extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n        <span className=\"App-title\">\n            X-Broker Manager\n        </span>\n        </div>\n        <Menu {...this.props}/>\n      </div>\n    )\n  }\n}\n\nexport default AppPage\n","/**\n *  Copyright (c) 2017, Applitopia, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the MIT-style license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { connect } from 'react-redux'\nimport { engine } from '../../engine'\nimport AppPage from './AppPage'\n\nconst e = engine;\n// const af = e.actionFactory();\n\nconst mapStateToProps = (state, live, ownProps) => ({\n  live,\n  state,\n})\n\nconst mapRepoToProps = (repo, ownProps) => mapStateToProps(e.head(repo), e.live(repo), ownProps)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({})\n\nconst AppContainer = connect(\n  mapRepoToProps,\n  mapDispatchToProps\n)(AppPage)\n\nexport default AppContainer\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport { store } from './engine'\nimport './index.css';\nimport AppContainer from './modules/App/AppContainer';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppContainer />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}